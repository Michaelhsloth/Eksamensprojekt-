@page "/MinSide"
@using hackerbooking.Shared;
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Min Side</PageTitle>

<h1>Min Side</h1>

@if (frivillige == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <p>Navn: @frivillige[0].navn</p>
    <p>Efternavn: @frivillige[0].efternavn</p>
    <p>Fødselsdag: @frivillige[0].fødselsdag</p>
    <p>Email: @frivillige[0].email</p>
    <p>Telefon Nummer: @frivillige[0].telefon_nummer</p>
    <p>Kompetencer: @frivillige[0].kompetence</p>
    <br />

    <h3>Ændre Email & Password</h3>
    <p>Ny Email: </p>
    <input @bind-value="nyEmail" />
    <br />
    <p>Nyt Password: </p>
    <input @bind-value="nyPassword0" />
    <br />
    <p>Bekræft Nyt Password: </p>
    <input @bind-value="nyPassword1" />
    <br />
    <br />
    <button class="btn btn-sm btn-primary" @onclick="@(()=>UpdateFrivillig())">Ændre</button>
}

@code {
    private string? nyEmail;
    private string? nyPassword0;
    private string? nyPassword1;

    private FrivilligeDTO[] frivillige;

    private FrivilligeDTO frivillig = new();

    private async Task UpdateFrivillig()
    {
        if (nyPassword0 == nyPassword1)
        {
            frivillig.email = nyEmail;
            frivillig.password = nyPassword0;
            // Update frivillig
            Console.WriteLine(frivillig.email);
            Console.WriteLine(frivillig.password);
            await Http.PutAsJsonAsync($"api/updateFrivillig/{frivillige[0].frivillig_id}", frivillig);
        }
        else
        {
            // error
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var id = await localStorage.GetItemAsync<int>("id");
        frivillige = await Http.GetFromJsonAsync<FrivilligeDTO[]>($"api/FindFrivillig{id}");
    }
}
