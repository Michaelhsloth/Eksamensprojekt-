@page "/MinSide"
@using hackerbooking.Shared;
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Min Side</PageTitle>

<h1>Min Side</h1>

<!--Check om der er noget data-->
<!--Hvis der er data vis det-->
@if (frivillige == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <p>Navn: @frivillige[0].navn</p>
    <p>Efternavn: @frivillige[0].efternavn</p>
    <p>Fødselsdag: @frivillige[0].fødselsdag</p>
    <p>Email: @frivillige[0].email</p>
    <p>Telefon Nummer: @frivillige[0].telefon_nummer</p>
    <p>Kompetencer: @frivillige[0].kompetence</p>
    <br />

    <h3>Ændre Email & Password</h3>
    <p>Ny Email: </p>
    <input @bind-value="nyEmail" />
    <br />
    <p>Nyt Password: </p>
    <input @bind-value="nyPassword0" />
    <br />
    <p>Bekræft Nyt Password: </p>
    <input @bind-value="nyPassword1" />
    <br />
    <br />
    <button class="btn btn-sm btn-primary" @onclick="@(()=>UpdateFrivillig())">Ændre</button>
}

@code {
    private string? nyEmail;
    private string? nyPassword0;
    private string? nyPassword1;

    private FrivilligeDTO[] frivillige;

    private FrivilligeDTO frivillig = new();

    protected override async Task OnInitializedAsync()
    {
        // Hent id fra browser
        var id = await localStorage.GetItemAsync<int>("id");
        // Hent frivillig hvor id er det samme
        frivillige = await Http.GetFromJsonAsync<FrivilligeDTO[]>($"api/Frivillige/{id}");
    }

    private async Task UpdateFrivillig()
    {
        // Tjekker om passwords fra de to inputs er det samme
        if (nyPassword0 == nyPassword1)
        {
            frivillig.email = nyEmail;
            frivillig.password = nyPassword0;
            // Updater frivillig med ny data
            await Http.PutAsJsonAsync($"api/Frivillige/{frivillige[0].frivillig_id}", frivillig);
            // Hent nyt data
            await OnInitializedAsync();
        }
    }
}
